# =============================================================================
# Manifest CLI Environment Configuration Example
# =============================================================================
# Copy this file to .env and customize the values for your environment
# cp env.example .env
# =============================================================================

# =============================================================================
# INTERACTIVE MODE CONFIGURATION
# =============================================================================
# Control interactive safety prompts for version bumps
# Set to false/no/0 to disable interactive prompts (default - useful for CI/CD)
# Set to true/yes/1 to enable interactive prompts (use -i flag instead)
MANIFEST_INTERACTIVE_MODE=false

# =============================================================================
# Versioning Configuration (CRITICAL - Customize for your organization)
# =============================================================================
# Version format pattern for your organization
# Examples:
#   - "XXXX.XXXX.XXXX" (e.g., 0001.0001.0001) for enterprise
#   - "XX.XX.XX" (e.g., 1.0.0) for standard semantic versioning
#   - "X.X.X.X" (e.g., 1.0.0.1) for build numbers
#   - "YYYY.MM.DD" (e.g., 2024.01.15) for date-based versioning
# Default: "XX.XX.XX" (standard semantic versioning)
MANIFEST_VERSION_FORMAT="XX.XX.XX"

# Version separator character
# Default: "." (dot)
MANIFEST_VERSION_SEPARATOR="."

# Version component names (for documentation and logging)
# Default: "major,minor,patch"
MANIFEST_VERSION_COMPONENTS="major,minor,patch"

# Maximum version component values (0 = unlimited)
# Format: "major_max,minor_max,patch_max"
# Default: "0,0,0" (unlimited)
MANIFEST_VERSION_MAX_VALUES="0,0,0"

# Human-Intuitive Versioning Logic
# =============================================================================
# How version components relate to human thinking:
# - LEFT components = More MAJOR changes (bigger impact)
# - RIGHT components = More MINOR changes (smaller impact)
# - More digits after last dot = More specific/precise changes

# Which component represents MAJOR changes (leftmost = most major)
# Default: "1" (first position from left)
MANIFEST_MAJOR_COMPONENT_POSITION="1"

# Which component represents MINOR changes (middle = moderate impact)
# Default: "2" (second position from left)
MANIFEST_MINOR_COMPONENT_POSITION="2"

# Which component represents PATCH changes (rightmost = least impact)
# Default: "3" (third position from left)
MANIFEST_PATCH_COMPONENT_POSITION="3"

# Which component represents REVISION changes (most right = most specific)
# Default: "4" (fourth position from left, if exists)
MANIFEST_REVISION_COMPONENT_POSITION="4"

# Version increment behavior (how each command affects components)
# =============================================================================
# When you run "manifest go major" - which component increments?
MANIFEST_MAJOR_INCREMENT_TARGET="1"          # First component (most left)

# When you run "manifest go minor" - which component increments?
MANIFEST_MINOR_INCREMENT_TARGET="2"          # Second component (middle)

# When you run "manifest go patch" - which component increments?
MANIFEST_PATCH_INCREMENT_TARGET="3"          # Third component (most right)

# When you run "manifest go revision" - which component increments?
MANIFEST_REVISION_INCREMENT_TARGET="4"       # Fourth component (if exists)

# Reset behavior (which components reset to 0 when incrementing others)
# =============================================================================
# When incrementing MAJOR, reset these components to 0
MANIFEST_MAJOR_RESET_COMPONENTS="2,3,4"     # Reset minor, patch, revision

# When incrementing MINOR, reset these components to 0
MANIFEST_MINOR_RESET_COMPONENTS="3,4"       # Reset patch, revision

# When incrementing PATCH, reset these components to 0
MANIFEST_PATCH_RESET_COMPONENTS="4"         # Reset revision only

# When incrementing REVISION, reset these components to 0
MANIFEST_REVISION_RESET_COMPONENTS=""       # Reset nothing (revision is additive)

# Version prefix for git tags
# Default: "v" (results in tags like v1.0.0)
MANIFEST_GIT_TAG_PREFIX="v"

# Version suffix for git tags
# Default: "" (no suffix)
MANIFEST_GIT_TAG_SUFFIX=""

# =============================================================================
# Branch Naming Configuration
# =============================================================================
# Default branch name (main, master, develop, etc.)
# Default: "main"
MANIFEST_DEFAULT_BRANCH="main"

# Feature branch prefix
# Default: "feature/"
MANIFEST_FEATURE_BRANCH_PREFIX="feature/"

# Hotfix branch prefix
# Default: "hotfix/"
MANIFEST_HOTFIX_BRANCH_PREFIX="hotfix/"

# Release branch prefix
# Default: "release/"
MANIFEST_RELEASE_BRANCH_PREFIX="release/"

# Bugfix branch prefix
# Default: "bugfix/"
MANIFEST_BUGFIX_BRANCH_PREFIX="bugfix/"

# Development branch name (for staging/development workflow)
# Default: "develop"
MANIFEST_DEVELOPMENT_BRANCH="develop"

# Staging branch name
# Default: "staging"
MANIFEST_STAGING_BRANCH="staging"

# Git Operations Configuration
# =============================================================================
# Primary remote name
# Default: "origin"
MANIFEST_GIT_PRIMARY_REMOTE="origin"

# Additional remotes (comma-separated)
# Default: "" (none)
MANIFEST_GIT_ADDITIONAL_REMOTES=""

# Git push strategy
# Options: "simple", "upstream", "current"
# Default: "simple"
MANIFEST_GIT_PUSH_STRATEGY="simple"

# Git pull strategy
# Options: "rebase", "merge", "ff-only"
# Default: "rebase"
MANIFEST_GIT_PULL_STRATEGY="rebase"

# =============================================================================
# NTP Configuration (Trusted Timestamps)
# =============================================================================
# Multiple servers for redundancy and accuracy
# Format: comma-separated list of NTP servers
# Default: time.apple.com,time.google.com,pool.ntp.org,time.nist.gov
MANIFEST_NTP_SERVERS="time.apple.com,time.google.com,pool.ntp.org,time.nist.gov"

# Timeout in seconds for NTP queries
# Default: 5
MANIFEST_NTP_TIMEOUT=5

# Number of retry attempts for NTP queries
# Default: 3
MANIFEST_NTP_RETRIES=3

# Whether to verify NTP server responses
# Default: true
MANIFEST_NTP_VERIFY=true

# =============================================================================
# Git Configuration (Uses system defaults if not set)
# =============================================================================
# Your Git user name (overrides system git config)
# Default: Uses system git config
# MANIFEST_GIT_USER_NAME="Your Name"

# Your Git user email (overrides system git config)
# Default: Uses system git config
# MANIFEST_GIT_USER_EMAIL="your.email@example.com"

# Custom commit message template
# Available placeholders: {version}, {timestamp}, {type}, {branch}
# Default: "Release v{version} - {timestamp}"
MANIFEST_GIT_COMMIT_TEMPLATE="Release v{version} - {timestamp}"

# =============================================================================
# Homebrew Integration (macOS)
# =============================================================================
# Control Homebrew functionality, as in, whether it runs at all
# Options: enabled, disabled
# Default: enabled
MANIFEST_BREW_OPTION=enabled

# Interactive Homebrew updates
# Options: yes, no, true, false, 1, 0
# Default: no
MANIFEST_BREW_INTERACTIVE=no

# Homebrew tap repository URL
# Default: https://github.com/fidenceio/fidenceio-homebrew-tap.git
MANIFEST_TAP_REPO="https://github.com/fidenceio/fidenceio-homebrew-tap.git"

# =============================================================================
# Documentation Configuration
# =============================================================================
# Directory for custom documentation templates
# Leave empty to use default templates
# Default: "" (uses built-in templates)
MANIFEST_DOCS_TEMPLATE_DIR=""

# Automatically generate documentation during version updates
# Options: true, false, 1, 0
# Default: true
MANIFEST_DOCS_AUTO_GENERATE=true

# Maximum number of historical versions to keep in past_releases
# Default: 20 (prevents directory bloat)
MANIFEST_DOCS_HISTORICAL_LIMIT=20

# Documentation file naming pattern
# Available placeholders: VERSION
# Examples:
#   - "RELEASE_vVERSION.md" → RELEASE_v1.0.0.md
#   - "RELEASE_VERSION.md" → RELEASE_1.0.0.md
#   - "RELEASE-VERSION.md" → RELEASE-1.0.0.md
# Default: "RELEASE_vVERSION.md"
MANIFEST_DOCS_FILENAME_PATTERN="RELEASE_vVERSION.md"

# =============================================================================
# Development & Debugging
# =============================================================================
# Enable debug mode for detailed logging
# Options: true, false, 1, 0
# Default: false
MANIFEST_DEBUG=false

# Enable verbose output
# Options: true, false, 1, 0
# Default: false
MANIFEST_VERBOSE=false

# Log level for output
# Options: DEBUG, INFO, WARN, ERROR
# Default: INFO
MANIFEST_LOG_LEVEL="INFO"

# Enable interactive mode for user prompts
# Options: true, false, 1, 0
# Default: true
MANIFEST_INTERACTIVE=true

# =============================================================================
# Project-Specific Configuration
# =============================================================================
# You can add project-specific variables here
# These will be loaded when running manifest commands in this project
#
# Examples:
# MANIFEST_PROJECT_NAME="My Awesome Project"
# MANIFEST_PROJECT_DESCRIPTION="A revolutionary tool for developers"
# MANIFEST_TEAM_NAME="Development Team"
# MANIFEST_ORGANIZATION="Acme Corp"

# =============================================================================
# Advanced Configuration
# =============================================================================
# Custom version parsing regex pattern
# Leave empty to use default parsing
# Default: "" (uses built-in parsing)
# MANIFEST_VERSION_REGEX=""

# Custom version validation rules
# Leave empty to use default validation
# Default: "" (uses built-in validation)
# MANIFEST_VERSION_VALIDATION=""

# Environment-specific overrides
# These files are loaded in order (last wins):
#   .env                    - Base configuration
#   .env.local             - Local overrides (ignored by git)
#   .env.development       - Development environment
#   .env.staging           - Staging environment
#   .env.production        - Production environment
#   .env.local             - Local development

# =============================================================================
# Quick Start Configuration
# =============================================================================
# For immediate use, uncomment and customize these essential variables:

# MANIFEST_DEFAULT_BRANCH="main"
# MANIFEST_VERSION_FORMAT="XX.XX.XX"
# MANIFEST_GIT_TAG_PREFIX="v"
# MANIFEST_NTP_SERVERS="time.nist.gov,time.google.com,pool.ntp.org"
# MANIFEST_BREW_OPTION=enabled
# MANIFEST_GIT_PRIMARY_REMOTE="origin"
